analyzer:
  errors:
    avoid_print: ignore
    prefer_collection_literals: ignore
    prefer_interpolation_to_compose_strings: ignore
    sort_constructors_first: ignore
    sort_unnamed_constructors_first: ignore
include: package:flutter_lints/flutter.yaml

linter:
  rules:
    #- avoid_print: false
    #prefer_const_constructors_in_immutables: false
    #prefer_const_constructors: false
    #prefer_const_literals_to_create_immutables: false
    #prefer_final_fields: false
    #unnecessary_breaks: true
    #use_key_in_widget_constructors: false
    # ğŸ”¹ OgÃ³lne dobre praktyki
    - always_declare_return_types
    - prefer_final_locals # zmienne wewnÄ…trz metod jako final jeÅ›li siÄ™ nie zmieniajÄ…
    - prefer_final_fields # podobnie, ale dla pÃ³l
    - unnecessary_breaks # niepotrzebne breaki = baÅ‚agan

    # ğŸ”¹ Consty â€“ tylko kiedy to ma sens
    - prefer_const_constructors
    - prefer_const_literals_to_create_immutables
    - prefer_const_constructors_in_immutables

    # ğŸ”¹ Flutter-specific
    - use_key_in_widget_constructors # Å¼eby widgety siÄ™ dobrze diffowaÅ‚y
    - avoid_unnecessary_containers # niepotrzebny widget = performance

    # ğŸ”¹ CzytelnoÅ›Ä‡ i porzÄ…dek
    - sort_constructors_first
    - annotate_overrides # @override dla nadpisanych metod
    - type_annotate_public_apis # nie pomijaj typÃ³w w publicznych metodach
